{"version":3,"file":"static/js/862.29f8cbe6.chunk.js","mappings":"kTAGMA,EAAU,gCACVC,EAAM,2CAECC,EAAU,mCAAG,8GAECC,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,6BACKC,IAHX,cAEhBG,EAFgB,yBAKfA,EAASC,KAAKC,SALC,gCAOtBC,QAAQC,MAAR,MAPsB,yDAAH,qDAWVC,EAAiB,mCAAG,WAAOC,GAAP,iGAENP,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,wBACAC,EADA,yBACoBS,IAHnB,cAEvBN,EAFuB,yBAKtBA,EAASC,KAAKC,SALQ,gCAO7BC,QAAQC,MAAR,MAP6B,yDAAH,sDAWjBG,EAAe,mCAAG,WAAOC,GAAP,iGAEJT,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACPY,EADO,YACDX,IAHA,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,QAAQC,MAAR,MAP2B,yDAAH,sDAWfK,EAAU,mCAAG,WAAOD,GAAP,iGAECT,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACPY,EADO,oBACOX,IAHb,cAEhBG,EAFgB,yBAKfA,EAASC,KAAKS,MALC,gCAOtBP,QAAQC,MAAR,MAPsB,yDAAH,sDAWVO,EAAW,mCAAG,WAAOH,GAAP,iGAEAT,EAAAA,EAAAA,GAAM,GAAD,OACvBH,EADuB,iBACPY,EADO,oBACOX,IAHZ,cAEjBG,EAFiB,yBAKhBA,EAASC,KAAKC,SALE,gCAOvBC,QAAQC,MAAR,MAPuB,yDAAH,qD,8KC/CXQ,EAAYC,EAAAA,GAAAA,GAAH,uEAITC,GAASD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,uF,SC0BnB,EA5Ba,WACX,OAAgCG,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,qGACHxB,EAAAA,EAAAA,KADG,OACjByB,EADiB,OAErBL,EAAYK,GAFS,2CAAH,qDAIpBD,GACD,GAAE,KAGD,4BACE,SAACV,EAAD,8BACA,wBACGK,EAASO,KAAI,gBAAGhB,EAAH,EAAGA,GAAIiB,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,KAAvB,OACZ,yBACE,UAACZ,EAAD,CAAQa,GAAE,iBAAYnB,GAAMoB,MAAOT,EAAnC,UACIM,GAAiBC,EADrB,aADOlB,EADG,QAUrB,C","sources":["axiosAPI/axios.js","components/Home/Home.styled.js","components/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n// import toast, { Toaster } from 'react-hot-toast';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=6e7eaf256e2890a0f83bf0d8fe3fe4d9'\n\nexport const trendQuery = async () => {\n  try {\n    const response = await axios(\n      `${baseURL}trending/all/week?${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const findFilmByKeyword = async (keyword) => {\n  try {\n    const response = await axios(\n      `${baseURL}search/movie?${KEY}&page=1&query=${keyword}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const findFilmDetails = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}?${KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const findActors = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/credits?${KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const findReviews = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/reviews?${KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};","import styled from \"styled-components\";\nimport { Link} from 'react-router-dom';\n\nexport const HomeTitle = styled.h2`\n    padding-left: 50px;\n    font-size: 20px;\n`\nexport const HomeLi = styled(Link)`\nfont-size: 16px;\ncolor: black;\n:hover{\n    color: blue;\n}\n`;","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { trendQuery } from '../../axiosAPI/axios';\nimport { HomeLi, HomeTitle } from './Home.styled';\n\nconst Home = () => {\n  const [filmList, setFilmList] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const createFilmList = async () => {      \n      let films = await trendQuery();\n      setFilmList(films);\n    };\n    createFilmList();\n  }, []);\n\n  return (\n    <div>\n      <HomeTitle>Trending today</HomeTitle>\n      <ul>\n        {filmList.map(({ id, original_title, name }) => (\n          <li key={id}>\n            <HomeLi to={`movies/${id}`} state={location}>\n              {!original_title ? name : original_title}&#9759;\n            </HomeLi>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["baseURL","KEY","trendQuery","axios","response","data","results","console","error","findFilmByKeyword","keyword","findFilmDetails","id","findActors","cast","findReviews","HomeTitle","styled","HomeLi","Link","useState","filmList","setFilmList","location","useLocation","useEffect","createFilmList","films","map","original_title","name","to","state"],"sourceRoot":""}