{"version":3,"file":"static/js/611.ca784100.chunk.js","mappings":"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","sources":["axiosAPI/axios.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MoviesSearch/MoviesSearch.styled.js","pages/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=6e7eaf256e2890a0f83bf0d8fe3fe4d9'\n\nexport const trendQuery = async (abort) => {\n  try {\n    const response = await axios(\n      `${baseURL}trending/all/week?${KEY}`, abort\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n    return [];\n  }\n};\n\nexport const findFilmByKeyword = async (keyword) => {\n  try {\n    const response = await axios(\n      `${baseURL}search/movie?${KEY}&page=1&query=${keyword}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findFilmDetails = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}?${KEY}`\n    );\n    if (response.data === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const findActors = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/credits?${KEY}`\n    );\n    if (response.data.cast === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findReviews = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/reviews?${KEY}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};","import styled from 'styled-components';\nimport { NavLink} from 'react-router-dom';\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from './MovieList.styled';\n\nexport const MovieList = ({ filmList }) => {\n  const location = useLocation();\n\n  const selectRoute = () => {\n    if (location.pathname === \"/\") {\n      return \"movies/\"\n    } else {\n      return '';\n    }\n  }\n\nreturn (\n      <ul>\n        {filmList.map(({ id, original_title, name }) => (\n          <li key={id}>\n            <Link to={`${selectRoute()}${id}`} state={location}>\n              {!original_title ? name : original_title}&#9759;\n            </Link>\n          </li>\n        ))}\n      </ul>\n  );\n};\n\nMovieList.propTypes = {\n  filmList: PropTypes.array.isRequired,\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  padding: 10px;\n  margin: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  cursor: pointer;\n  :hover {\n    background-color: lightblue;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Disc = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const AddInformBox = styled.div`\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n    min-width: 300px;\n    padding: 10px;\n    font-size: 16px;\n`;","import { useState, useEffect } from 'react';\nimport { useSearchParams} from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { findFilmByKeyword } from '../../axiosAPI/axios';\nimport { Btn } from '../MovieDetails/MovieDetails.styled';\nimport { MovieList } from '../../components/MovieList/MovieList';\nimport { Input } from './MoviesSearch.styled';\n\nconst MoviesSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [filmQuery, setFilmQuery] = useState();\n  const [searchFilmList, setSearchFilmList] = useState([]);\n  let query = searchParams.get('query');\n\n  function setQuery(evt) {\n    evt.preventDefault();\n    const keywordQuery = evt.target.elements.filmInput.value\n      .trim()\n      .toLowerCase();\n    if (keywordQuery === '') {\n      toast.error('The query input field is empty');\n      return;\n    }\n    if (keywordQuery === filmQuery) {\n      toast.error('You have not changed your request');\n      return;\n    }\n    setFilmQuery(keywordQuery);\n    setSearchParams({ query: keywordQuery });\n    evt.target.elements.filmInput.value = '';\n  }\n\n  useEffect(() => {\n    const fetchFilmList = async () => {\n      if (!query ) {\n        return;\n      }\n      const films = await findFilmByKeyword(query);\n      if (films.length > 0) {\n        setSearchFilmList(films);\n      } else {\n        toast.error('Nothing was found for your request!!!');\n      }\n    };\n    fetchFilmList();\n  }, [query]);\n\n  return (\n    <>\n      <div>\n        <form onSubmit={setQuery}>\n          <Input\n            type=\"text\"\n            name=\"filmInput\"\n            placeholder=\"Enter the movie(s) title or keywords\"\n          />\n          <Btn type=\"submit\">Search</Btn>\n        </form>\n      </div>\n      {searchFilmList && <MovieList filmList={searchFilmList} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["baseURL","KEY","trendQuery","abort","axios","undefined","response","data","results","Error","toast","message","findFilmByKeyword","keyword","findFilmDetails","id","findActors","cast","findReviews","Link","styled","NavLink","MovieList","filmList","location","useLocation","map","original_title","name","to","pathname","state","Btn","Wrapper","Disc","AddInformBox","Input","useSearchParams","searchParams","setSearchParams","useState","filmQuery","setFilmQuery","searchFilmList","setSearchFilmList","query","get","useEffect","fetchFilmList","films","length","onSubmit","evt","preventDefault","keywordQuery","target","elements","filmInput","value","trim","toLowerCase","type","placeholder"],"sourceRoot":""}