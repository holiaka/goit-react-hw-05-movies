{"version":3,"file":"static/js/947.6b9d75a8.chunk.js","mappings":"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","sources":["axiosAPI/axios.js","components/MovieDetails/MovieDetails.jsx","components/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=6e7eaf256e2890a0f83bf0d8fe3fe4d9'\n\nexport const trendQuery = async (abort) => {\n  try {\n    const response = await axios(\n      `${baseURL}trending/all/week?${KEY}`, abort\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n    return [];\n  }\n};\n\nexport const findFilmByKeyword = async (keyword) => {\n  try {\n    const response = await axios(\n      `${baseURL}search/movie?${KEY}&page=1&query=${keyword}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findFilmDetails = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}?${KEY}`\n    );\n    if (response.data === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const findActors = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/credits?${KEY}`\n    );\n    if (response.data.cast === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findReviews = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/reviews?${KEY}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};","import { useState, useEffect, Suspense} from 'react';\nimport {\n  useParams,\n  useLocation,\n  useNavigate,\n  Outlet,\n} from 'react-router-dom';\nimport { findFilmDetails } from 'axiosAPI/axios';\nimport { Loader } from '../Loader/Loader';\nimport { AddInformBox, Btn, Disc, Wrapper, Link } from './MovieDetails.styled';\n\nconst baseImageURL = 'https://image.tmdb.org/t/p/w500/';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n\n  let {\n    poster_path ='',\n    original_title = '',\n    release_date = '',\n    vote_average,\n    overview = '',\n    genres = [],\n  } = details;\n\n  useEffect(() => {\n    const showMainDetails = async () => {\n      let discr = await findFilmDetails(id);\n      setDetails(discr);\n    };\n    showMainDetails();\n  }, [id]);\n\n  function goPrevPage() {\n    if (location.state) {\n      navigate(location.state);\n    } else {\n      navigate('/');\n    }\n  }\n\n  return (\n    <>\n      <Btn type=\"button\" onClick={goPrevPage}>\n        <b>&#8678;</b> GO BACK\n      </Btn>\n      <Wrapper>\n        <div>\n          <img\n            src={`${baseImageURL}${poster_path}`}\n            alt={`${original_title}`} \n            width=\"350\"\n          />\n        </div>\n        <div>\n          <h2>\n            {`${original_title}`} <span>({release_date.slice(0, 4)})</span>\n          </h2>\n          <Disc>User Scope: {`${Math.round(vote_average * 10)}%`}</Disc>\n          <h3>Overview</h3>\n          <Disc>{overview}</Disc>\n          <h3>Genres</h3>\n          <Disc>\n            {genres.map(genre => (\n              <span key={genre.id}>{genre.name + ' '}</span>\n            ))}\n          </Disc>\n        </div>\n      </Wrapper>\n      <AddInformBox>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={id}>Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={id}>Reviews</Link>\n          </li>\n        </ul>\n      </AddInformBox>\n      <Suspense fallback={<Loader />}>\n        <Outlet/>\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  padding: 10px;\n  margin: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  cursor: pointer;\n  :hover {\n    background-color: lightblue;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Disc = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const AddInformBox = styled.div`\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;\n"],"names":["baseURL","KEY","trendQuery","abort","axios","undefined","response","data","results","Error","toast","message","findFilmByKeyword","keyword","findFilmDetails","id","findActors","cast","findReviews","useState","details","setDetails","location","useLocation","navigate","useNavigate","useParams","poster_path","original_title","release_date","vote_average","overview","genres","useEffect","showMainDetails","discr","type","onClick","state","src","alt","width","slice","Math","round","map","genre","name","to","Suspense","fallback","Btn","styled","Wrapper","Disc","AddInformBox","Link","NavLink"],"sourceRoot":""}