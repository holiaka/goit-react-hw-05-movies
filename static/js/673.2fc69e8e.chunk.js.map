{"version":3,"file":"static/js/673.2fc69e8e.chunk.js","mappings":"4TAGMA,EAAU,gCACVC,EAAM,2CAECC,EAAU,mCAAG,WAAOC,GAAP,iGAECC,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,6BACKC,GAAOE,GAHlB,eAKQE,KAHxBC,EAFgB,QAKTC,KAAKC,QALI,sBAMd,IAAIC,MAAM,sDANI,gCAQfH,EAASC,KAAKC,SARC,uCAUtBE,EAAAA,GAAAA,MAAY,KAAMC,SAVI,kBAWf,IAXe,yDAAH,sDAeVC,EAAiB,mCAAG,WAAOC,GAAP,iGAENT,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,wBACAC,EADA,yBACoBY,IAHnB,eAKCR,KAHxBC,EAFuB,QAKhBC,KAAKC,QALW,sBAMrB,IAAIC,MAAM,sDANW,gCAQtBH,EAASC,KAAKC,SARQ,uCAU7BE,EAAAA,GAAAA,MAAA,MAV6B,kBAWtB,IAXsB,yDAAH,sDAejBI,EAAe,mCAAG,WAAOC,GAAP,iGAEJX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,YACDd,IAHA,eAKLI,KAHhBC,EAFqB,QAKdC,KALc,sBAMnB,IAAIE,MAAM,sDANS,gCAQpBH,EAASC,MARW,gCAU3BG,EAAAA,GAAAA,MAAA,MAV2B,yDAAH,sDAcfM,EAAU,mCAAG,WAAOD,GAAP,iGAECX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,oBACOd,IAHb,eAKKI,KAHrBC,EAFgB,QAKTC,KAAKU,KALI,sBAMd,IAAIR,MAAM,sDANI,gCAQfH,EAASC,KAAKU,MARC,uCAUtBP,EAAAA,GAAAA,MAAA,MAVsB,kBAWf,IAXe,yDAAH,sDAeVQ,EAAW,mCAAG,WAAOH,GAAP,iGAEAX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,oBACOd,IAHZ,eAKOI,KAHxBC,EAFiB,QAKVC,KAAKC,QALK,sBAMf,IAAIC,MAAM,sDANK,gCAQhBH,EAASC,KAAKC,SARE,uCAUvBE,EAAAA,GAAAA,MAAA,MAVuB,kBAWhB,IAXgB,yDAAH,qD,mMC9DXS,EAAMC,EAAAA,GAAAA,OAAH,oRAaHC,EAAUD,EAAAA,GAAAA,IAAH,iKASPE,EAAOF,EAAAA,GAAAA,EAAH,gDAIJG,EAAeH,EAAAA,GAAAA,IAAH,6EAKZI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,+F,4KC3BJM,EAAmB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACzBC,GAAWC,EAAAA,EAAAA,MACnB,GAA4CC,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,qGACEtB,EAAAA,EAAAA,IAAkBe,GADpB,QACZQ,EADY,QAERC,OAAS,EACnBJ,EAAkBG,GAElBzB,EAAAA,GAAAA,MAAY,yCALM,2CAAH,qDAQnBwB,GACD,GAAE,CAACP,KAGA,wBACCI,EAAeM,KAAI,YAAoB,IAAjBtB,EAAgB,EAAhBA,GAAIuB,EAAY,EAAZA,MACzB,OACE,0BACG,KACD,UAAC,KAAD,CAAMC,GAAE,UAAKxB,GAAMyB,MAAOZ,EAA1B,UACGU,EADH,cAFOvB,EAOZ,KAGN,E,SCnCY0B,E,QAAQrB,GAAAA,MAAH,yFC4ClB,EAvCqB,WACnB,IAAMsB,GAAWC,EAAAA,EAAAA,MACXf,GAAWC,EAAAA,EAAAA,MACXe,EAAe,IAAIC,gBAAgBjB,EAASkB,QAAQC,IAAI,SAC9D,GAAkCjB,EAAAA,EAAAA,UAAS,IAA3C,eAAOH,EAAP,KAAkBqB,EAAlB,KAmBA,OACE,iCACE,0BACE,kBAAMC,SApBZ,SAAkBC,GAChBA,EAAIC,iBACJ,IAAMC,EAAeF,EAAIG,OAAOC,SAASC,UAAUC,MAChDC,OACAC,cACkB,KAAjBN,EAGOA,IAAiBzB,GAI5BqB,EAAaI,GACbV,EAAS,UAAD,OAAWU,IACnBF,EAAIG,OAAOC,SAASC,UAAUC,MAAQ,IALpC9C,EAAAA,GAAAA,MAAY,qCAHZA,EAAAA,GAAAA,MAAY,iCASf,EAKK,WACE,SAAC+B,EAAD,CACAkB,KAAK,OACLC,KAAK,YACLC,YAAY,0CACZ,SAAC,KAAD,CAAKF,KAAK,SAAV,yBAGHf,IAAgB,SAAClB,EAAD,CAAkBC,UAAWiB,MAGnD,C","sources":["axiosAPI/axios.js","components/MovieDetails/MovieDetails.styled.js","pages/MoviesSearchList.jsx","components/MoviesSearch/MoviesSearch.styled.js","components/MoviesSearch/MoviesSearch.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=6e7eaf256e2890a0f83bf0d8fe3fe4d9'\n\nexport const trendQuery = async (abort) => {\n  try {\n    const response = await axios(\n      `${baseURL}trending/all/week?${KEY}`, abort\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n    return [];\n  }\n};\n\nexport const findFilmByKeyword = async (keyword) => {\n  try {\n    const response = await axios(\n      `${baseURL}search/movie?${KEY}&page=1&query=${keyword}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findFilmDetails = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}?${KEY}`\n    );\n    if (response.data === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const findActors = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/credits?${KEY}`\n    );\n    if (response.data.cast === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findReviews = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/reviews?${KEY}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  padding: 10px;\n  margin: 8px;\n  font-size: 16px;\n  font-weight: 700;\n  border-radius: 4px;\n  cursor: pointer;\n  :hover {\n    background-color: lightblue;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Disc = styled.p`\n  margin-bottom: 30px;\n`;\n\nexport const AddInformBox = styled.div`\n  border-bottom: 1px solid;\n  margin-bottom: 30px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-size: 16px;\n  color: black;\n  :hover {\n    color: blue;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { findFilmByKeyword } from 'axiosAPI/axios';\nimport { Link } from 'components/MovieDetails/MovieDetails.styled';\n\nexport const MoviesSearchList = ({ filmQuery }) => {\n    const location = useLocation();\n  const [searchFilmList, setSearchFilmList] = useState([]);\n\n  useEffect(() => {\n    const fetchFilmList = async () => {        \n        const films = await findFilmByKeyword(filmQuery);\n        if (films.length > 0) {        \n        setSearchFilmList(films);\n      } else {\n        toast.error('Nothing was found for your request!!!');\n      }\n    };\n    fetchFilmList();\n  }, [filmQuery]);\n\n  return (\n      <ul>        \n      {searchFilmList.map(({ id, title }) => {\n        return (\n          <li key={id}>\n            {' '}\n            <Link to={`${id}`} state={location}>\n              {title}&#9759;\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nMoviesSearchList.propTypes = {\n  filmQuery: PropTypes.string.isRequired,\n}\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n    min-width: 300px;\n    padding: 10px;\n    font-size: 16px;\n`;","import { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { Btn } from 'components/MovieDetails/MovieDetails.styled';\nimport { MoviesSearchList } from '../../pages/MoviesSearchList';\nimport { Input } from './MoviesSearch.styled';\n\nconst MoviesSearch = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const searchString = new URLSearchParams(location.search).get('query');\n  const [filmQuery, setFilmQuery] = useState('');\n\n  function setQuery(evt) {\n    evt.preventDefault();\n    const keywordQuery = evt.target.elements.filmInput.value\n      .trim()\n      .toLowerCase();\n    if (keywordQuery === '') {\n      toast.error('The query input field is empty');\n      return;\n    } else if (keywordQuery === filmQuery) {\n      toast.error('You have not changed your request');\n      return;\n    }\n    setFilmQuery(keywordQuery);\n    navigate(`?query=${keywordQuery}`);\n    evt.target.elements.filmInput.value = '';\n  }\n\n  return (\n    <>\n      <div>\n        <form onSubmit={setQuery}>\n          <Input\n          type=\"text\" \n          name=\"filmInput\"\n          placeholder='Enter the movie(s) title or keywords' />\n          <Btn type=\"submit\">Search</Btn>\n        </form>\n      </div>\n      {searchString && <MoviesSearchList filmQuery={searchString} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n"],"names":["baseURL","KEY","trendQuery","abort","axios","undefined","response","data","results","Error","toast","message","findFilmByKeyword","keyword","findFilmDetails","id","findActors","cast","findReviews","Btn","styled","Wrapper","Disc","AddInformBox","Link","NavLink","MoviesSearchList","filmQuery","location","useLocation","useState","searchFilmList","setSearchFilmList","useEffect","fetchFilmList","films","length","map","title","to","state","Input","navigate","useNavigate","searchString","URLSearchParams","search","get","setFilmQuery","onSubmit","evt","preventDefault","keywordQuery","target","elements","filmInput","value","trim","toLowerCase","type","name","placeholder"],"sourceRoot":""}