{"version":3,"file":"static/js/736.1b1f69f0.chunk.js","mappings":"uKAAO,IAAMA,EAAsB,SAAAC,GAGjC,IAFA,IAAIC,EAAkB,GAChBC,EAAYF,EAAIG,KAAI,SAAAC,GAAI,OAAIA,EAAKC,EAAT,IACrBC,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,IACpC,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAUK,OAAQC,IAChCF,EAAIE,GAAKN,EAAUI,KAAOJ,EAAUM,KACjCP,EAAgBQ,SAASD,IAC5BP,EAAgBS,KAAKF,IAM7B,OADeR,EAAIW,QAAO,SAACP,EAAMQ,GAAP,OAAgBX,EAAgBQ,SAASG,EAAzC,GAE3B,C,gHCyBD,UAlCgB,SAAC,GAAY,IAAVP,EAAS,EAATA,GACjB,GAAoCQ,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACEC,EAAAA,EAAAA,IAAYb,GADd,OACdc,EADc,OAElBA,GAAUpB,EAAAA,EAAAA,GAAoBoB,GAC9BJ,EAAcI,GAHI,2CAAH,qDAKjBF,GACD,GAAE,CAACZ,KAGF,8BACyB,IAAtBS,EAAWP,QACV,+FAIA,wBACGO,EAAWX,KACV,gBAAGE,EAAH,EAAGA,GAAH,IAAOe,OAAAA,OAAP,MAAgB,gBAAhB,MAAiCC,QAAAA,OAAjC,MAA2C,gBAA3C,SACE,2BACE,4CAAoBD,MACpB,6BAAKC,OAFEhB,EADX,OAWX,C","sources":["filterFuncToArrById/filterFuncToArrById.js","pages/Reviews.jsx"],"sourcesContent":["export const filterFuncToArrById = arr => {\n  let repetitionIndex = [];\n  const reviewIds = arr.map(item => item.id);\n  for (let i = 0; i < reviewIds.length; i++) {\n    for (let j = 1; j < reviewIds.length; j++) {\n      if (i < j && reviewIds[i] === reviewIds[j]) {\n        if (!repetitionIndex.includes(j)) {\n          repetitionIndex.push(j);\n        }\n      } \n    }\n  }\n  const output = arr.filter((item, idx) => !repetitionIndex.includes(idx));\n  return output;\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { findReviews } from 'axiosAPI/axios';\nimport { filterFuncToArrById } from 'filterFuncToArrById/filterFuncToArrById';\n\nconst Reviews = ({ id }) => {\n  const [reviewList, setReviewList] = useState([]);\n\n  useEffect(() => {\n    const showReviews = async () => {\n      let reviews = await findReviews(id);\n      reviews = filterFuncToArrById(reviews);\n      setReviewList(reviews);\n    };\n    showReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviewList.length === 0 ? (\n        <h3>\n          There is no information about the film`s reviews in the database!\n        </h3>\n      ) : (\n        <ul>\n          {reviewList.map(\n            ({ id, author = 'Not available', content = 'Not available' }) => (\n              <li key={id}>\n                <h3>Review's name: {author}</h3>\n                <p> {content}</p>\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n\nReviews.propTypes = {\n  id: PropTypes.string.isRequired,\n}"],"names":["filterFuncToArrById","arr","repetitionIndex","reviewIds","map","item","id","i","length","j","includes","push","filter","idx","useState","reviewList","setReviewList","useEffect","showReviews","findReviews","reviews","author","content"],"sourceRoot":""}