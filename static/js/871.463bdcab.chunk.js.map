{"version":3,"file":"static/js/871.463bdcab.chunk.js","mappings":"4TAGMA,EAAU,gCACVC,EAAM,2CAECC,EAAU,mCAAG,WAAOC,GAAP,iGAECC,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,6BACKC,GAAOE,GAHlB,eAKQE,KAHxBC,EAFgB,QAKTC,KAAKC,QALI,sBAMd,IAAIC,MAAM,sDANI,gCAQfH,EAASC,KAAKC,SARC,uCAUtBE,EAAAA,GAAAA,MAAY,KAAMC,SAVI,kBAWf,IAXe,yDAAH,sDAeVC,EAAiB,mCAAG,WAAOC,GAAP,iGAENT,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,wBACAC,EADA,yBACoBY,IAHnB,eAKCR,KAHxBC,EAFuB,QAKhBC,KAAKC,QALW,sBAMrB,IAAIC,MAAM,sDANW,gCAQtBH,EAASC,KAAKC,SARQ,uCAU7BE,EAAAA,GAAAA,MAAA,MAV6B,kBAWtB,IAXsB,yDAAH,sDAejBI,EAAe,mCAAG,WAAOC,GAAP,iGAEJX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,YACDd,IAHA,eAKLI,KAHhBC,EAFqB,QAKdC,KALc,sBAMnB,IAAIE,MAAM,sDANS,gCAQpBH,EAASC,MARW,gCAU3BG,EAAAA,GAAAA,MAAA,MAV2B,yDAAH,sDAcfM,EAAU,mCAAG,WAAOD,GAAP,iGAECX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,oBACOd,IAHb,eAKKI,KAHrBC,EAFgB,QAKTC,KAAKU,KALI,sBAMd,IAAIR,MAAM,sDANI,gCAQfH,EAASC,KAAKU,MARC,uCAUtBP,EAAAA,GAAAA,MAAA,MAVsB,kBAWf,IAXe,yDAAH,sDAeVQ,EAAW,mCAAG,WAAOH,GAAP,iGAEAX,EAAAA,EAAAA,GAAM,GAAD,OACvBJ,EADuB,iBACPe,EADO,oBACOd,IAHZ,eAKOI,KAHxBC,EAFiB,QAKVC,KAAKC,QALK,sBAMf,IAAIC,MAAM,sDANK,gCAQhBH,EAASC,KAAKC,SARE,uCAUvBE,EAAAA,GAAAA,MAAA,MAVuB,kBAWhB,IAXgB,yDAAH,qD,uDCjEjB,IAAMS,EAAsB,SAAAC,GAGjC,IAFA,IAAIC,EAAkB,GAChBC,EAAYF,EAAIG,KAAI,SAAAC,GAAI,OAAIA,EAAKT,EAAT,IACrBU,EAAI,EAAGA,EAAIH,EAAUI,OAAQD,IACpC,IAAK,IAAIE,EAAI,EAAGA,EAAIL,EAAUI,OAAQC,IAChCF,EAAIE,GAAKL,EAAUG,KAAOH,EAAUK,KACjCN,EAAgBO,SAASD,IAC5BN,EAAgBQ,KAAKF,IAM7B,OADeP,EAAIU,QAAO,SAACN,EAAMO,GAAP,OAAgBV,EAAgBO,SAASG,EAAzC,GAE3B,C,0HC0BD,UAnCgB,WACd,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACOnB,GAAMoB,EAAAA,EAAAA,MAANpB,GAWP,OATAqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACEnB,EAAAA,EAAAA,IAAYH,GADd,OACduB,EADc,OAElBA,GAAUnB,EAAAA,EAAAA,GAAoBmB,GAC9BJ,EAAcI,GAHI,2CAAH,qDAKjBD,GACD,GAAE,CAACtB,KAGF,8BACyB,IAAtBkB,EAAWP,QACV,+FAIA,wBACGO,EAAWV,KACV,SAACgB,GAAD,OACE,2BACE,mDAAoBA,QAApB,IAAoBA,OAApB,EAAoBA,EAAQC,WAC5B,oCAAKD,QAAL,IAAKA,OAAL,EAAKA,EAAQE,aAFf,OAASF,QAAT,IAASA,OAAT,EAASA,EAAQxB,GADnB,OAWX,C","sources":["axiosAPI/axios.js","filterFuncToArrById/filterFuncToArrById.js","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport toast from 'react-hot-toast';\n\nconst baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = 'api_key=6e7eaf256e2890a0f83bf0d8fe3fe4d9'\n\nexport const trendQuery = async (abort) => {\n  try {\n    const response = await axios(\n      `${baseURL}trending/all/week?${KEY}`, abort\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error.message);\n    return [];\n  }\n};\n\nexport const findFilmByKeyword = async (keyword) => {\n  try {\n    const response = await axios(\n      `${baseURL}search/movie?${KEY}&page=1&query=${keyword}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findFilmDetails = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}?${KEY}`\n    );\n    if (response.data === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data;\n  } catch (error) {\n    toast.error(error);\n  }\n};\n\nexport const findActors = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/credits?${KEY}`\n    );\n    if (response.data.cast === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};\n\nexport const findReviews = async (id) => {\n  try {\n    const response = await axios(\n      `${baseURL}movie/${id}/reviews?${KEY}`\n    );\n    if (response.data.results === undefined) {      \n      throw new Error(\"Request failed!!! Probably no internet connection!\");\n    }\n    return response.data.results;\n  } catch (error) {\n    toast.error(error);\n    return [];\n  }\n};","export const filterFuncToArrById = arr => {\n  let repetitionIndex = [];\n  const reviewIds = arr.map(item => item.id);\n  for (let i = 0; i < reviewIds.length; i++) {\n    for (let j = 1; j < reviewIds.length; j++) {\n      if (i < j && reviewIds[i] === reviewIds[j]) {\n        if (!repetitionIndex.includes(j)) {\n          repetitionIndex.push(j);\n        }\n      } \n    }\n  }\n  const output = arr.filter((item, idx) => !repetitionIndex.includes(idx));\n  return output;\n};\n","import { useState, useEffect } from 'react';\nimport { findReviews } from 'axiosAPI/axios';\nimport { filterFuncToArrById } from 'filterFuncToArrById/filterFuncToArrById';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviewList, setReviewList] = useState([]);\n  const {id} = useParams();\n\n  useEffect(() => {    \n    const showReviews = async () => {\n      let reviews = await findReviews(id);\n      reviews = filterFuncToArrById(reviews);\n      setReviewList(reviews);\n    };\n    showReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviewList.length === 0 ? (\n        <h3>\n          There is no information about the film`s reviews in the database!\n        </h3>\n      ) : (\n        <ul>\n          {reviewList.map(\n            (review) => (\n              <li key={review?.id}>\n                <h3>Review's name: {review?.author}</h3>\n                <p> {review?.content}</p>\n              </li>\n            )\n          )}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["baseURL","KEY","trendQuery","abort","axios","undefined","response","data","results","Error","toast","message","findFilmByKeyword","keyword","findFilmDetails","id","findActors","cast","findReviews","filterFuncToArrById","arr","repetitionIndex","reviewIds","map","item","i","length","j","includes","push","filter","idx","useState","reviewList","setReviewList","useParams","useEffect","showReviews","reviews","review","author","content"],"sourceRoot":""}